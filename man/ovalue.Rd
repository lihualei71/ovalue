% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{ovalue}
\alias{ovalue}
\title{O-values of Observational Studies}
\usage{
ovalue(T = NULL, X = NULL, formula = NULL, data = NULL,
  alpha = 0.05, type = c("ATE", "ATT", "ATC"), scorefuns = c("rf",
  "gbm"), sw = rep(1, length(scorefuns)), methods = c("ROC", "EBenn"),
  mw = rep(1, length(scorefuns)), trainprop = 0.5, nreps = 50,
  verbose = TRUE, return_list = FALSE, ...)
}
\arguments{
\item{T}{a logical vector or a factor/vector encoded by 0 and 1. Treatment assignment}

\item{X}{a matrix or a data.frame. Covariate}

\item{formula}{a formula object. See Details}

\item{data}{a data.frame. See Details}

\item{alpha}{numeric. Confidence level}

\item{type}{a vector of strings. Types of overlap condition to be considered. Currently support "ATE", "ATT" and "ATC"}

\item{trainprop}{numeric. Proportion of training samples}

\item{nreps}{an integer. Number of times for data splitting}

\item{verbose}{logical. Indicate whether relevant information is outputted to the console}

\item{return_list}{logical. Indicate whether the O-values for each split are returned.}

\item{...}{Other arguments passed into \code{scorefun}}

\item{scorefun}{a string or a function. See Details}
}
\value{
\item{ATE/ATT/ATC}{ median of O-values for all splitted data for ATE/ATT/ATC.}
\item{etalist}{ optional (only returned when \code{return_list = TRUE}). List of O-values for each splitted data. Each entry corresponds to a type of overlap condition.}
}
\description{
\code{ovalue} is a framework to calculate O-values of observational studies allowing for arbitrary classifiers to calculate 1-d scores.
}
\details{
\code{ovalue} provides a bunch of user-friendly wrappers and a flexible framework that allows for arbitrary classifiers. For the former, \code{scorefun} can be a valid string, including
\itemize{
\item "logistic" for logistic regression,
\item "lasso" for L1-penalized logistic regression,
\item "gam" for generalized additive model,
\item "gbm" for generalized boosting machine,
\item "rf" for random forest.
}

For the latter, \code{scorefun} can be a function object whose inputs must include
\itemize{
\item "T" for treatment vector, must be a logical vector or a factor/vector encoded by 0 and 1,
\item "X" for covariates, must be a vector/matrix/data.frame,
\item "trainid" for the index of training samples, must be a logical vector or a vector of integers.
}

\code{ovalue} supports two types of data inputs: (1) \code{T} and \code{X} or (2) \code{formula} and \code{data}. One of the pair has to be specified.
}
\examples{
\donttest{# Generate data from a logistic model
set.seed(1)
n <- 1000
p <- 50
X <- matrix(stats::rnorm(n * p), n, p)
beta <- rep(1 / sqrt(p), p)
probs <- 1 / (1 + exp(-X \%*\% beta))
T <- stats::runif(n) <= probs
data <- data.frame(T = T, X)

# Calculate the O-value with inputs \\code{T} and \\code{X}
set.seed(1)
ovalue(T, X, scorefun = "gbm")

# Calculate the O-value with inputs \\code{formula} and \\code{data}
set.seed(1)
ovalue(formula = T ~ ., data = data, scorefun = "gbm")
}

}
